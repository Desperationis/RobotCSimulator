#include "Compile.h"
#include "../RobotC.h"
#include "../stdafx.h"
using namespace RobotC::Types;
using namespace RobotC::Threads;
using namespace RobotC::Types;
using namespace RobotC::Peripherals;
using namespace RobotC::Functions;
SensorPort leftEncoder;
SensorPort rightEncoder;
MotorPort leftMotor;
MotorPort rightMotor;
void SetUp() {
	config("leftEncoder", leftEncoder, dgtl1);
	config("rightEncoder", rightEncoder, dgtl3);
	config("leftMotor", leftMotor, port1, false);
	config("rightMotor", rightMotor, port5, true);
};

//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

// Notes:
// You can download files from cortex using Robot > Advanced Tools > File Management
// You can download view joystick values using Robot > Advanced Tools > Joystick Viewer
// You can check battery level by using nImmediateBatterLevel; Found in Battery > Variables
// You can use controller accelerameter values.

// Running tasks PID() and Slew() will give you 8 concurrent tassks left.

void GoForward(int amount);

task programMain() {
	InitCustomLibrary();

	// Global Settings
	SetAverageDelay(20);
	SetMaxSpeed(1);

	// Tell the library our chassis sensors and motors.
	SetLeftMotor(leftMotor);
	SetRightMotor(rightMotor);
	SetLeftEncoder(leftEncoder);
	SetRightEncoder(rightEncoder);


	// Activate Controllers
	// PID Settings
	startTask(GamerControl);

	while((true) && !killAll) {
		// Keep program alive.
		delay(GetDelay());
	}
}

void GoForward(int amount) {
	SetPIDTarget(LEFT, amount);
	SetPIDTarget(RIGHT, amount);

	while((!BothHasReached(leftEncoder, rightEncoder, -amount, 10)) && !killAll) {
		// Keep program alive.
		delay(GetDelay());
	}
}
